
class PDVR_Cutlass : DoomWeaponZ
{
	Default
	{
		Tag "$TAG_CUTLASS";
		weapon.selectionorder 9999;
		weapon.kickback 100;
		weapon.Slotnumber 1;
		obituary "%k cut %o into pieces.";
		+WEAPON.WIMPY_WEAPON
		+WEAPON.MELEEWEAPON
		+WEAPON.NOALERT
		+WEAPON.AXEBLOOD
		-PUFFONACTORS
		+WEAPON.NOHANDSWITCH
		scale 0.9;
	}
	
	override void Tick()
	{
		Super.Tick();
		
		if(!owner || owner.health < 1) return;
		
		if(offhandEquip == 2 && owner.player.offhandweapon is "PDVR_OffhandCutlass")
		{
			owner.takeinventory("PDVR_OffhandCutlass", 1);
		}
		
		if(offhandEquip < 2 && !owner.countinv("PDVR_OffhandCutlass"))
		{
			owner.giveinventory("PDVR_OffhandCutlass", 1);
		}
	}
	
	States
	{
	Spawn:
		CUTL A -1;
		Loop;
	Ready:
		TNT1 A 0;
		SWOR A 0 A_SetWeaponModel("SWNH");
		#### A 1 A_WeaponReady;
		loop;
	Deselect:
		SWOR A 0 A_SetWeaponModel("SWNH");
		#### A 1 A_Lower (160);
		loop;
	Select:
		SWOR A 0 A_SetWeaponModel("SWNH");
		#### A 1 A_Raise (160);
		loop;
	Fire:
		SWOR A 0 A_SetWeaponModel("SWNH");
		#### # 0 A_JumpIfInventory("PowerStrength", 1, "PowerFire");
		#### BCDEF 1;
		#### G 1 A_StartSound("espada/swing");
		#### H 1 A_CustomPunch(0,0,0,"SwordPuff2",80);
		#### H 1 A_CustomPunch(random(4,10)*2,0,0,"SwordPuff",80);
		#### I 2;
		#### A 2 A_refire;
		#### A 5;
		Goto Ready;
	PowerFire:
		#### JKLMN 1;
		#### O 1 A_StartSound("espada/swing");
		#### P 1 A_CustomPunch(0,0,0,"SwordPuff2",80);
		#### Q 1 A_CustomPunch(random(4,10)*6,0,0,"SwordPuff",80);
		#### A 4 A_refire;
		Goto Ready;
	AltFire:
		SWOR A 0 A_SetWeaponModel("SWNH");
		#### A 0 A_playsound("skeleton/swing",CHAN_WEAPON);
	Althold:
		SWOR G 2 A_JumpIfInventory("PowerStrength",1,"PowerFire");
		#### JKLMN 1;
		#### O 1 A_StartSound("espada/swing");
		#### P 1 A_CustomPunch(0,0,0,"SwordPuff2",80);
		#### P 1 A_CustomPunch(random(4,10)*2,0,0,"SwordPuff",80);
		#### Q 2;
		#### A 2 A_refire;
		#### A 5;
		goto Ready;
	Placeholder:
		SWNH A 0;
		Stop;
	}
}

class PDVR_OffhandCutlass : PDVR_Cutlass
{
	bool needPipe;

	Default
	{
	weapon.selectionorder 3702;
	+WEAPON.OFFHANDWEAPON;
	}
	
	override void Tick()
	{
		Super.Tick();
		
		if(!owner || owner.health < 1) return;
		
		if(!owner.player.OffhandWeapon)
		{
			owner.player.PendingWeapon = self;
		}
	}
	
	private void checkPipeSmoking()
	{
		if(!needPipe && offhandEquip != 1) return;
		
		let pmo = owner.player.mo;
		int hand = bOffhandWeapon;
		double angle = pmo.angle;
		double pitch = pmo.AimTarget() ? pmo.BulletSlope(null, ALF_PORTALRESTRICT) : pmo.pitch;
		int laflags = LAF_NOIMPACTDECAL | LAF_NOINTERACT | LAF_NORANDOMPUFFZ;
		if(hand) laflags |= LAF_ISOFFHAND;
		let _puff = pmo.LineAttack(angle-15, 9, pitch+150, 0, "melee", "PDVR_DUmmyPuff1", laflags);
		vector3 pipePos = _puff.pos;
		vector3 cameraPos = owner.pos + (0,0,owner.height);// + ((Actor.AngleToVector(owner.angle, 1), 0) * 2);
		
		if(Level.vec3diff(cameraPos, pipePos).length() <= 3 && GetAge() && GetAge() % random(15,30) == 0)
		{
			Actor.Spawn("pipeSmoke", cameraPos);
			owner.A_StartSound("pipe/smoke/sizzle", CHAN_WEAPON);
			owner.A_StartSound("pipe/smoke/puff", CHAN_WEAPON, CHANF_OVERLAP);
		}
	}
	
	action void A_CheckPipeSmoking()
	{
		invoker.checkPipeSmoking();
	}
	
	States
	{
	Ready:
		TNT1 A 0;
		SWOR A 0 A_SetWeaponModel("SWNH");
		#### A 0 A_JumpIf(invoker.needPipe, "ReadyPipe");
		#### A 0 A_JumpIf(invoker.offhandEquip == 1, "ReadyPipe");
		#### A 1 A_WeaponReady;
		loop;
	ReadyPipe:
		#### Z 1 A_CheckPipeSmoking;
		Goto Ready;
	Deselect:
		SWOR A 0 A_SetWeaponModel("SWNH");
		#### A 0 A_JumpIf(invoker.offhandEquip == 1, "DeselectPipe");
		#### A 1 A_Lower (160);
		loop;
	DeselectPipe:
		#### Z 1 A_Lower (160);
		loop;
	Select:
		SWOR A 0 A_SetWeaponModel("SWNH");
		#### A 0 A_JumpIf(invoker.offhandEquip == 1, "SelectPipe");
		#### A 1 A_Raise (160);
		loop;
	SelectPipe:
		#### Z 1 A_Raise (160);
		loop;
	Fire:
		SWOR A 0 A_SetWeaponModel("SWNH");
		#### # 0 A_JumpIfInventory("PowerStrength", 1, "PowerFire");
		#### BCDEF 1;
		#### G 1 A_StartSound("espada/swing");
		#### H 1 A_CustomPunch(0,0,0,"SwordPuff2",80);
		#### H 1 A_CustomPunch(random(4,10)*2,0,0,"SwordPuff",80);
		#### I 2;
		#### A 2 A_refire;
		#### A 5;
		Goto Ready;
	PowerFire:
		#### JKLMN 1;
		#### O 1 A_StartSound("espada/swing");
		#### P 1 A_CustomPunch(0,0,0,"SwordPuff2",80);
		#### Q 1 A_CustomPunch(random(4,10)*6,0,0,"SwordPuff",80);
		#### A 4 A_refire;
		Goto Ready;
	AltFire:
		SWOR A 0 A_SetWeaponModel("SWNH");
		#### A 0 A_playsound("skeleton/swing",CHAN_WEAPON);
	Althold:
		SWOR G 2 A_JumpIfInventory("PowerStrength",1,"PowerFire");
		#### JKLMN 1;
		#### O 1 A_StartSound("espada/swing");
		#### P 1 A_CustomPunch(0,0,0,"SwordPuff2",80);
		#### P 1 A_CustomPunch(random(4,10)*2,0,0,"SwordPuff",80);
		#### Q 2;
		#### A 2 A_refire;
		#### A 5;
		goto Ready;
	}
}